import json
import os

# Load spec from file generated by triage.py
with open('spec.json', 'r', encoding='utf-8') as f:
    spec = json.load(f)

with open('index.html', 'r') as f:
    content = f.read()

# Task: Add save button if in spec
if any("save button" in task.lower() for task in spec['tasks']):
    if '<button onclick="saveCounter()">' not in content:
        # Insert save button inside .controls div before the closing </div>
        controls_end = content.find('</div>', content.find('<div class="controls">'))
        if controls_end != -1:
            button_html = '\n            <button onclick="saveCounter()">Save Counter</button>'
            content = content[:controls_end] + button_html + content[controls_end:]
        # Add saveCounter function in the existing script block
        script_start = content.find('<script>') + len('<script>')
        script_end = content.find('</script>', script_start)
        if script_start != -1 and script_end != -1:
            save_function = '\n        function saveCounter() { const blob = new Blob([`Counter Value: ${count}`], { type: "text/plain" }); const url = URL.createObjectURL(blob); const a = document.createElement("a"); a.href = url; a.download = "counter_value.txt"; a.click(); URL.revokeObjectURL(url); }'
            content = content[:script_end] + save_function + content[script_end:]

# Stage all modified files and commit
os.system('git add index.html spec.json triage.json')
os.system('git commit -m "Add save button per spec tasks" || echo "No changes to commit"')
os.system('git push')

with open('index.html', 'w') as f:
    f.write(content)
